openapi: 3.0.3
info:
  title: Advalay Video Uploader API
  version: "1.0.0"
servers:
  - url: http://localhost:4000
tags:
  - name: Public
  - name: OAuth
components:
  parameters:
    StoreTokenHeader:
      name: X-Store-Token
      in: header
      required: true
      schema: { type: string }
      description: 店舗専用の公開アップロード用トークン
  schemas:
    Error:
      type: object
      properties:
        message: { type: string }
        code: { type: string }
    Banner:
      type: object
      properties:
        channelDisplayName:
          type: string
          example: "LAWSON 新宿西口店"
    UploadInitRequest:
      type: object
      required: [serialNo, title, fileName, fileSize]
      properties:
        serialNo: { type: string, example: "A-2025-000123" }
        title: { type: string, example: "売場記録 2025-09-28" }
        fileName: { type: string, example: "video.mp4" }
        fileSize: { type: integer, example: 73400320, description: "bytes, <= 209715200" } # 200MB
    UploadInitResponse:
      type: object
      properties:
        uploadId: { type: string, example: "up_01JXYZ..." }
        presignedUrl: { type: string, format: uri }
        presignedFields:
          type: object
          additionalProperties: { type: string }
    UploadCompleteResponse:
      type: object
      properties:
        jobId: { type: string, example: "job_01JABC..." }
    JobStatus:
      type: object
      properties:
        state:
          type: string
          enum: [queued, uploading, processing, done, failed]
        youtube:
          type: object
          properties:
            videoId: { type: string, example: "dQw4w9WgXcQ" }
            url: { type: string, example: "https://youtu.be/dQw4w9WgXcQ" }
        error: { $ref: "#/components/schemas/Error" }
    OAuthStartRequest:
      type: object
      required: [storeId]
      properties:
        storeId: { type: string, example: "st_01J..." }
    OAuthStartResponse:
      type: object
      properties:
        consentUrl: { type: string, format: uri }
    OAuthCallbackRequest:
      type: object
      required: [code, state]
      properties:
        code: { type: string }
        state: { type: string }
paths:
  /api/v1/public/banner:
    get:
      tags: [Public]
      summary: 店舗ページ右上のチャンネル名を取得
      parameters:
        - $ref: "#/components/parameters/StoreTokenHeader"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Banner" }
        "401":
          description: invalid store token
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }

  /api/v1/public/uploads/init:
    post:
      tags: [Public]
      summary: アップロード初期化（署名URL発行）
      parameters:
        - $ref: "#/components/parameters/StoreTokenHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/UploadInitRequest" }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/UploadInitResponse" }
        "400": { description: invalid input }
        "401": { description: invalid store token }
        "413": { description: file too large }

  /api/v1/public/uploads/{uploadId}/complete:
    post:
      tags: [Public]
      summary: クライアント側アップロード完了報告→ジョブ投入
      parameters:
        - $ref: "#/components/parameters/StoreTokenHeader"
        - name: uploadId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/UploadCompleteResponse" }
        "401": { description: invalid store token }
        "404": { description: upload not found }

  /api/v1/jobs/{jobId}:
    get:
      tags: [Public]
      summary: ジョブ状態確認
      parameters:
        - $ref: "#/components/parameters/StoreTokenHeader"
        - name: jobId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/JobStatus" }
        "401": { description: invalid store token }
        "404": { description: job not found }

  /api/v1/channels/oauth/start:
    post:
      tags: [OAuth]
      summary: 店舗用YouTube連携開始（同意URLを発行）
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/OAuthStartRequest" }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/OAuthStartResponse" }

  /api/v1/channels/oauth/callback:
    post:
      tags: [OAuth]
      summary: OAuth同意コールバック（refresh_token保存）
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/OAuthCallbackRequest" }
      responses:
        "204": { description: saved }
        "400": { description: invalid code/state }
